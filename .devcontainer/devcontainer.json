{
    "name": "OpenVino Docker",
    "build": {
        "dockerfile": "Dockerfile",
        "args": { "BASE": "openvino/ubuntu18_dev", "TAG": "2021.1", "USERNAME": "openvino" }
    },
    "runArgs": ["--net=host", "--device-cgroup-rule", "c 189:* rmw", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
//    "runArgs": ["--net=host", "--device-cgroup-rule", "c 189:* rmw", "-v", "/dev/bus/usb:/dev/bus/usb", "--device=/dev/dri:/dev/dri", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
//    "runArgs": ["--net=host", "--device=/dev/dri:/dev/dri", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
    
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
        "source=/dev/bus/usb,target=/dev/bus/usb,type=bind"
    ],
    
    // Use this environment variable if you need to bind mount your local source code into a new container.
    "remoteEnv": {
        "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
        "DISPLAY": "${localEnv:DISPLAY}"
    },

    // Set *default* container specific settings.json values on container create.
    "settings": { 
        "terminal.integrated.shell.linux": "/bin/bash"
    },

    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-azuretools.vscode-docker",
        "ms-vscode.cpptools",
        "ms-python.python"
    ],
    
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created.
    //"postCreateCommand": "",

    // Uncomment the next two lines to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    "overrideCommand": false,
    "remoteUser": "openvino"
}